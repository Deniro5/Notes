{"version":3,"sources":["Note.js","Main.js","App.js","serviceWorker.js","index.js"],"names":["Note","react_default","a","createElement","className","onClick","this","props","open","alt","src","remove","title","desc","Component","Main","state","items","display","newOpen","curr","resultsShown","componentDidMount","localStorage","getItem","setItem","console","log","JSON","parse","_this","setState","handleOpen","index","handleClose","handleNewOpen","handleNewClose","timestamp","Date","getTime","newnote","refs","newnotetitle","value","newnotedesc","substring","length","newItems","push","stringify","searchinput","handleExpandedClose","e","map","indexOf","expandednotetitle","expandednotedesc","update","count","newdisplay","inputlength","input","toLowerCase","curritem","start","end","stopPropagation","splice","loadMore","notes","expandedNote","style","fontSize","color","marginTop","Modal_default","aria-labelledby","aria-describedby","onClose","bind","ref","defaultValue","height","width","background","margin","item","src_Note","type","onChange","placeholder","App","src_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c6793363.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass Note extends Component {\n  render() {\n    return (\n      <div className=\"Note\" onClick = {this.props.open}>\n        <img alt = \"close\" className = \"NoteClose\" src = \"../imgs/cancel.png\" onClick = {this.props.remove}/>\n        <p className = \"NoteTitle\"> {this.props.title}</p>\n        <p className = \"NoteDescription\"> {this.props.desc} </p>\n      </div>\n    );\n  }\n}\n\nexport default Note;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Note from \"./Note\"\nimport Modal from '@material-ui/core/Modal';\n\nclass Main extends Component {\n  state = {\n    items: [],\n    display: [],\n    open:false,\n    newOpen: false,\n    curr: 0,\n    resultsShown: 10,\n  }\n\n  componentDidMount = () => {\n    let items = [];\n    if (localStorage.getItem(\"Notes\") === null || localStorage.getItem(\"Notes\") === [] || localStorage.getItem(\"Notes\") === \"\") {\n      localStorage.setItem(\"Notes\", [])\n    }\n    else {\n      console.log(localStorage.getItem(\"Notes\"))\n      items = JSON.parse(localStorage.getItem(\"Notes\")); \n    }\n    this.setState({\n      display:items,\n      items:items\n    })\n  }\n\n  handleOpen = (index) => {\n    this.setState({ \n      open: true, \n      curr: index \n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false });\n  };\n\n  handleNewOpen = () => {\n    this.setState({ newOpen: true});\n  };\n\n  handleNewClose = () => {\n    //save the changes here\n    var date = new Date();\n    var timestamp = date.getTime()\n    var newnote = {\"title\": this.refs.newnotetitle.value , \"desc\": this.refs.newnotedesc.value.substring(0,this.refs.newnotedesc.value.length) , \"timestamp\": timestamp}\n    let newItems = this.state.items;\n    newItems.push(newnote)\n    localStorage.setItem(\"Notes\", JSON.stringify(newItems));\n    this.refs.searchinput.value = \"\"\n    this.setState({ newOpen: false, display : newItems, items: newItems });\n  };\n\n  handleExpandedClose = (timestamp, e) => {\n    //save the changes here\n    var index = this.state.items.map(function(e) { return e.timestamp; }).indexOf(timestamp);\n    let newItems = this.state.items;\n    newItems[index].title = this.refs.expandednotetitle.value;\n    newItems[index].desc = this.refs.expandednotedesc.value;\n    localStorage.setItem(\"Notes\", JSON.stringify(newItems));\n    this.refs.searchinput.value = \"\"\n    this.setState({ open: false, display : newItems , items: newItems });\n  };\n\n  update = () => {\n    if (this.refs.searchinput.value === \"\") {\n      this.setState({\n        display: this.state.items,\n        curr:0,\n      })\n    }\n    else {\n      var count = 0;\n      var newdisplay = [];\n      var inputlength = this.refs.searchinput.value.length\n      var input = this.refs.searchinput.value.toLowerCase()\n      while (count < this.state.items.length) {\n        var curritem = this.state.items[count]\n        var start = 0;\n        var end = inputlength;\n        while (end < curritem.desc.length+1) {\n          if (curritem.desc.substring(start,end).toLowerCase()  === input) {\n            newdisplay.push(curritem);\n            break;\n          }\n          else {\n            start++;\n            end++;\n          }\n        }\n        count++;\n      }\n      this.setState({\n        display: newdisplay,\n        resultsShown: 10,\n        curr:0,\n      })\n    }\n  }\n\n  remove = (timestamp , e) => {\n    e.stopPropagation()\n    var index = this.state.items.map(function(e) { return e.timestamp; }).indexOf(timestamp);\n    let newItems = this.state.items\n    newItems.splice(index,1)\n    localStorage.setItem(\"Notes\", JSON.stringify(newItems));\n    this.setState({\n      items: newItems\n    }, () => {this.update()} )\n\n  }\n\n  loadMore = () => {\n    this.setState({\n      resultsShown: this.state.resultsShown + 10\n    })\n  }\n  \n  render() {\n\n    var notes;\n    var expandedNote;\n    if (this.state.display.length === 0) {\n      notes = (<p style = {{ fontSize :\"28px\" , color : \"white\" , marginTop : \"40px\" }}> No notes to show </p>)\n      expandedNote = (<div> </div>);\n    }\n    else {\n      expandedNote = (\n        <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={this.state.open}\n        onClose={this.handleExpandedClose.bind(this, this.state.display[this.state.curr].timestamp)}\n      >\n      <div className = \"expandedNote\"> \n        <input className = \"expandedNoteTitle\" ref = \"expandednotetitle\" defaultValue = {this.state.display[this.state.curr].title} /> \n        <div style = {{height: \"1px\" , width: \"90%\" , background:\"black\", margin: \"auto\", marginTop: \"15px\"}}/>\n        <textarea className = \"expandedNoteDescContainer\" ref = \"expandednotedesc\"  defaultValue = {this.state.display[this.state.curr].desc} /> \n        <img alt = \"close\" className = \"NoteClose\" src = \"../imgs/cancel.png\" onClick = {this.handleExpandedClose.bind(this,this.state.display[this.state.curr].timestamp)}/>\n    </div>\n    </Modal>)\n\n      var count = 0;\n      notes = []\n      while (count < this.state.resultsShown && count < this.state.display.length) {\n        var item = this.state.display[count]\n        notes.push(<Note title = {item.title} desc = {item.desc.substring(0,250)} remove = {this.remove.bind(this,item.timestamp)} open = {this.handleOpen.bind(this,count)}/>)\n        count++;\n      }\n    }\n    return (\n      <div className=\"Search\">\n        <input ref = \"searchinput\" type=\"text\" className = \"SearchBar\" onChange = {this.update} placeholder=\"Search...\"/>\n        <button className = \"addBtn\" onClick = {this.handleNewOpen}>Add Ne</button>\n        <div className = \"noteContainer\">\n          {notes}\n        </div>\n        {expandedNote}\n        <Modal\n          aria-labelledby=\"simple-modal-title\"\n          aria-describedby=\"simple-modal-description\"\n          open={this.state.newOpen}\n          onClose={this.handleNewClose}\n        >\n          <div className = \"newNote\">\n            <input ref = \"newnotetitle\" className = \"newNoteTitle\" placeholder = \"Title\"/ >\n              <div style = {{height: \"1px\" , width: \"90%\" , background:\"black\", margin: \"auto\", marginTop: \"10px\"}}/>\n            <textarea ref = \"newnotedesc\" className = \"newNoteDesc\" placeholder = \"Start writing here...\"/ >\n            <img alt = \"close\" className = \"NoteClose\" src = \"../imgs/cancel.png\" onClick = {this.handleNewClose}/>\n          </div>\n        </Modal>\n        {this.state.resultsShown < this.state.display.length && <button className = \"loadBtn\"  onClick = {this.loadMore} > Load More </button>}\n      </div>\n    );\n  }\n}\n\nexport default Main;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Main from './Main';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Main/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}